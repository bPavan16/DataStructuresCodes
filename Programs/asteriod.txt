
#include <stdio.h>
#include<math.h>
#include<string.h>
#include<stdlib.h>

#define SIZE 50

typedef struct stack
{
    int array[SIZE];
    int top;
} Stack;

void initStack(Stack *s)
{
    s->top = -1;
}

void push(Stack *s, int n)
{
    s->top++;
    s->array[s->top] = n;
}

int pop(Stack *s)
{
    int a = s->array[s->top];
    s->top--;
    return a;
}

int isFUll(Stack *s)
{
    return s->top == (SIZE - 1);
}

int isEmpty(Stack *s)
{
    return s->top == -1;
}

void DisplayStack(Stack *s)
{
    for (int i = s->top; i >= 0; i--)
    {
        printf("%d\n", s->array[i]);
    }
}

void count(Stack *s, int num[])
{
    for (int i = s->top; i >= 0; i--)
    {
        if (s->array[i] < 0)
        {
            num[0]++;
        }

        else if (s->array[i] > 0)
        {
            num[1]++;
        }
    }
}

int main()
{
    Stack s;
    initStack(&s);

    int n;
    int m;
    scanf("%d", &n);
    
    if(n<=0)
    {
        printf("No asteroids in space.");
        exit(0);
    }

    for (int i = 0; i < n; i++)
    {
        scanf("%d", &m);
        push(&s, m);
    }

    int ptolem, neil;

    scanf("%d", &ptolem);
    scanf("%d", &neil);

    printf("Asteroids in space:\n");
    DisplayStack(&s);

    int nums[2] = {0, 0};

    count(&s,nums);

    printf("Asteroids collide with Ptolem asteroid: %d\n", nums[0]);
    printf("Asteroids collide with Neil asteroid: %d\n", nums[1]);

    return 0;
}